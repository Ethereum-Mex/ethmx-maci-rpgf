# ----------------------
# DATABASE CONFIGURATION
# ----------------------




# Create a Postgres database: https://vercel.com/dashboard/stores?type=postgres
# You can find the configuration in the `.env.local` tab 
POSTGRES_URL="postgres://default:PqltFwgnIO03@ep-nameless-dream-a4i7qzvy-pooler.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require"
POSTGRES_PRISMA_URL="postgres://default:PqltFwgnIO03@ep-nameless-dream-a4i7qzvy-pooler.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require&pgbouncer=true&connect_timeout=15"
POSTGRES_URL_NO_SSL="postgres://default:PqltFwgnIO03@ep-nameless-dream-a4i7qzvy-pooler.us-east-1.aws.neon.tech:5432/verceldb"
POSTGRES_URL_NON_POOLING="postgres://default:PqltFwgnIO03@ep-nameless-dream-a4i7qzvy.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require"
POSTGRES_USER="default"
POSTGRES_HOST="ep-nameless-dream-a4i7qzvy-pooler.us-east-1.aws.neon.tech"
POSTGRES_PASSWORD="PqltFwgnIO03"
POSTGRES_DATABASE="verceldb"

# Storage for metadata
# Create a Blob database and get token here: https://vercel.com/dashboard/stores?type=blob
BLOB_READ_WRITE_TOKEN="vercel_blob_rw_tLKCW6GvT40QO3g6_Okf40SmypR7sAqe5pnpr0mjznB9j7B"

# ------------------
# AUTH CONFIGURATION
# ------------------

# You can generate a new secret on the command line with: `openssl rand -base64 32`
# https://next-auth.js.org/configuration/options#secret
NEXTAUTH_SECRET="riASuCTcZZSdbRyYVB2yQqYeq2FH77YYEIpeXFdY5aY"

# Domain where your app will be hosted (set to http://localhost:3000 for running locally)
# (if this is not configured correctly, signing the wallet message to sign in will not work)
# NEXTAUTH_URL="https://easy-retro-pgf.vercel.app"
NEXTAUTH_URL="http://localhost:3000"



# ---------------------
# NETWORK CONFIGURATION
# ---------------------

# Must be one of: ethereum, optimism, optimismSepolia, arbitrum, linea, sepolia, baseGoerli
# Supported networks found here: https://docs.attest.sh/docs/quick--start/contracts
# NEXT_PUBLIC_CHAIN_NAME=optimism
NEXT_PUBLIC_CHAIN_NAME=sepolia

# EAS GraphQL API URL
# Find the URLs here: https://docs.attest.sh/docs/developer-tools/api
NEXT_PUBLIC_EASSCAN_URL=https://sepolia.easscan.org/graphql
# NEXT_PUBLIC_EASSCAN_URL=https://optimism.easscan.org/graphql

# Optional but highly recommended
# Get your key at: https://dashboard.alchemy.com
NEXT_PUBLIC_ALCHEMY_ID="VfMbCzTdxatHObVa6CJNB9Ha0eBIkitB"

# WalletConnect (optional to support more wallets)
# Get your projectId at https://cloud.walletconnect.com
NEXT_PUBLIC_WALLETCONNECT_ID="d317a862df64b98c8df5d6edd5e008e0"
# NEXT_PUBLIC_WALLETCONNECT_ID="21fef48091f12692cad574a6f7753643" # https://github.com/rainbow-me/rainbowkit/blob/d68813501e40363f76856f7471552c83c08f7606/packages/rainbowkit/src/wallets/getWalletConnectConnector.ts#L73


NEXT_PUBLIC_MACI_ADDRESS=0x951fe449D3e7b02d3c6B0bC38fA9eB17dA3E7f0e

NEXT_PUBLIC_TALLY_URL=https://upblxu2duoxmkobt.public.blob.vercel-storage.com

# -----------------
# APP CONFIGURATION
# -----------------


# What the message will say when you sign in with the wallet
NEXT_PUBLIC_SIGN_STATEMENT="Sign in to EasyRetroPGF"

# Unique identifier for your applications and lists - your app will group attestations by this id
NEXT_PUBLIC_ROUND_ID="open-rpgf-1"

# Name of the token you want to allocate (only updates UI)
NEXT_PUBLIC_TOKEN_NAME="ETH"

# How many votes each ballot can hold
NEXT_PUBLIC_MAX_VOTES_TOTAL=30000000
# How many votes each project can receive
NEXT_PUBLIC_MAX_VOTES_PROJECT=5000000

# Voting periods
# Determine when users can register applications, admins review them, voters vote, and results are published
NEXT_PUBLIC_START_DATE=2024-01-01T00:00:00.000Z
NEXT_PUBLIC_REGISTRATION_END_DATE=2024-01-01T00:00:00.000Z
NEXT_PUBLIC_REVIEW_END_DATE=2024-01-01T00:00:00.000Z
NEXT_PUBLIC_VOTING_END_DATE=2024-01-01T00:00:00.000Z
NEXT_PUBLIC_RESULTS_DATE=2024-01-01T00:00:00.000Z

# Collect user feedback. Is shown as a link when user has voted
NEXT_PUBLIC_FEEDBACK_URL=https://github.com/gitcoinco/easy-retro-pgf/issues/new?title=Feedback

# Comma-separated list of addresses that will approve applications and voters
# (leaving empty means anyone can do this)
NEXT_PUBLIC_ADMIN_ADDRESSES=0xe8b5993312eb4f3cF77cCD4147ebF9aD0Cd811b5,0xe8b5993312eb4f3cF77cCD4147ebF9aD0Cd811b5


# -----------------
# EAS CONFIGURATION
# -----------------

# Set to true to let anyone vote without an approval attestation
NEXT_PUBLIC_SKIP_APPROVED_VOTER_CHECK=false

# Schema for approved applications and voters
# (optional)
NEXT_PUBLIC_APPROVAL_SCHEMA=0x858e0bc94997c072d762d90440966759b57c8bca892d4c9447d2eeb205f14c69

# Schema for storing metadata refs (projects, lists, profiles, ...)
# (optional)
NEXT_PUBLIC_METADATA_SCHEMA=0xd00c966351896bd3dc37d22017bf1ef23165f859d7546a2aba12a01623dec912

# Used when creating attestations - change these if you're not on Optimism
# More info here: https://docs.attest.sh/docs/quick--start/contracts
NEXT_PUBLIC_EAS_CONTRACT_ADDRESS=0xC2679fBD37d54388Ce493F1DB75320D236e1815e
NEXT_PUBLIC_EAS_SCHEMA_REGISTRY_ADDRESS=0xC2679fBD37d54388Ce493F1DB75320D236e1815e


# -------------------
# Allo2 Configuration
# -------------------
NEXT_PUBLIC_ALLO2_ADDRESS="0x1133eA7Af70876e64665ecD07C0A0476d09465a1"
NEXT_PUBLIC_STRATEGY_ADDRESS="0xa3c5a2ea8ca2060e00761069b23da5171146a747"
NEXT_PUBLIC_TOKEN_ADDRESS=""


# ----------------------
# Advanced Configuration
# ----------------------

# You can register schemas by running the script: npm run eas:registerSchemas
# Do this if the schemas doesn't exist on the network you're using.
WALLET_PRIVATE_KEY=""